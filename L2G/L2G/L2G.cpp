// L2G.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <fstream>
#include <cmath>
#include <omp.h>
#include <sstream>
#include <string>

int main() {
    int j = 1;
    std::string line; // переменная для строки
    std::ifstream file("B:/Projects/university/Git/L2G/testFile1.txt"); // открываем файл
    if (file.is_open()) {
#pragma omp parallel num_threads(5)
#pragma omp for
        for (int i = 1; i <= 100; i++) {
            std::getline(file, line); // считываем строку
#pragma omp critical
            std::cout << "j= " << j << "  " << line << "  exp= " << log((std::stod(line) / j)) << "  " << "thread: "
                << omp_get_thread_num() << std::endl;
            j++;
        }
    }
    else {
        std::cout << " file not open";
    }
    file.close();

    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
